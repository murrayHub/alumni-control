package com.alumni.control.enums;

import com.alumni.control.exception.ErrorCode;
import lombok.AllArgsConstructor;
import lombok.Getter;


/**
 * 错误码枚举类
 * <p>
 * 1.
 * </p>
 *
 * @author Murray
 * @version 1.0.0
 * @date 2017/11/4
 */
@Getter
@AllArgsConstructor
public enum ErrorCodeEnum implements ErrorCode {
    /**
     * 登陆密码错误
     */
    ERROR_CODE_000001("000001", "账户或密码错误"),
    /**
     * 文件上传失败
     */
    ERROR_CODE_000002("000002", "文件上传失败"),
    /**
     * 账号已存在
     */
    ERROR_CODE_000003("000003", "账号已存在"),
    /**
     * 该邮箱已存在
     */
    ERROR_CODE_000004("000004", "该邮箱已存在"),
    /**
     * 该手机号已存在
     */
    ERROR_CODE_000005("000005", "该手机号已存在"),
    /**
     * 该微信号已存在
     */
    ERROR_CODE_000006("000006", "该微信号已存在"),
    /**
     * 标签数量最大为6
     */
    ERROR_CODE_000007("000007", "标签数量最大为6"),
    /**
     * 用户编号为空
     */
    ERROR_CODE_000008("000008", "用户编号为空"),
    /**
     * 圈编号为空
     */
    ERROR_CODE_000009("000009", "圈编号为空"),
    /**
     * 入圈申请已提交，等待受理，请勿重复提交申请
     */
    ERROR_CODE_000010("000010", "入圈申请已提交，等待受理，请勿重复提交申请"),
    /**
     * 您已成功加入该圈，请勿重复提交申请
     */
    ERROR_CODE_000011("000011", "您已成功加入该圈，请勿重复提交申请"),
    /**
     * 您已关注过该用户
     */
    ERROR_CODE_000012("000012", "您已关注过该用户"),
    /**
     * 您尚未关注过该用户
     */
    ERROR_CODE_000013("000013", "您尚未关注过该用户"),
    /**
     * 发布人不能为空
     */
    ERROR_CODE_000014("000014", "发布人不能为空"),
    /**
     * 发布动态不能为空
     */
    ERROR_CODE_000015("000015", "发布动态不能为空"),
    /**
     * 动态编号为空
     */
    ERROR_CODE_000016("000016", "动态编号为空"),
    /**
     * 注册手机号长度不正确
     */
    ERROR_CODE_000017("000017", "注册手机号长度不正确"),
    /**
     * 注册手机号格式不正确
     */
    ERROR_CODE_000018("000018", "注册手机号格式不正确"),
    /**
     * 注册邮箱格式不正确
     */
    ERROR_CODE_000019("000019", "注册邮箱格式不正确"),
    /**
     * 账号不存在
     */
    ERROR_CODE_000020("000020", "账号不存在"),
    /**
     * 登录账号状态异常
     */
    ERROR_CODE_000021("000021", "登录账号状态异常"),
    /**
     * 登录密码状态异常
     */
    ERROR_CODE_000022("000022", "登录密码状态异常"),
    /**
     * 登录密码不正确
     */
    ERROR_CODE_000023("000023", "登录密码不正确"),
    /**
     * 学校代码不能为空
     */
    ERROR_CODE_000024("000024", "学校代码不能为空"),
    /**
     * 管理员级别不能为空
     */
    ERROR_CODE_000025("000025", "管理员级别不能为空"),
    /**
     * 管理员类型不能为空
     */
    ERROR_CODE_000026("000026", "管理员类型不能为空"),
    /**
     * 学院代码不能为空
     */
    ERROR_CODE_000027("000027", "学院代码不能为空"),
    /**
     * 管理员编号不能为空
     */
    ERROR_CODE_000028("000028", "管理员编号不能为空"),
    /**
     * 管理员不存在
     */
    ERROR_CODE_000029("000029", "管理员不存在"),
    /**
     * 当前管理员级别无信息初审权限
     */
    ERROR_CODE_000030("000030", "当前管理员级别无信息初审权限"),
    /**
     * 当前管理员类型无信息初审权限
     */
    ERROR_CODE_000031("000031", "当前管理员类型无信息初审权限"),
    /**
     * 当前管理员级别无信息复审权限
     */
    ERROR_CODE_000032("000032", "当前管理员级别无信息复审权限"),
    /**
     * 当前管理员类型无信息复审权限
     */
    ERROR_CODE_000033("000033", "当前管理员类型无信息复审权限"),
    /**
     * 当前管理员级别无信息查看权限
     */
    ERROR_CODE_000034("000034", "当前管理员级别无信息查看权限"),
    /**
     * 认证编号不能为空
     */
    ERROR_CODE_000035("000035", "认证编号不能为空"),
    /**
     * 认证状态不能为空
     */
    ERROR_CODE_000036("000036", "认证状态不能为空"),
    /**
     * 注册邀请码不正确
     */
    ERROR_CODE_000037("000037", "注册邀请码不正确"),
    /**
     * 所在学院不能为空
     */
    ERROR_CODE_000038("000038", "所在学院不能为空"),




    ;
    /**
     * 错误码
     */
    private String errorCode;


    /**
     * 异常描述
     */
    private String errorDesc;

    /**
     * 设置错误描述信息
     *
     * @param errorMsg 错误信息
     */
    @Override
    public void setErrorDesc(String errorMsg) {
        this.errorDesc = errorMsg;
    }
}
